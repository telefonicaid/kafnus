networks:
  orion-network:
    driver: bridge
    name: orion-network

services:
  orion:
    image: telefonicaiot/fiware-orion
    container_name: orion
    ports:
      - "1026:1026"
    environment:
      - MQTT_SERVER=mosquitto
      - MQTT_PORT=1883
      - MQTT_QOS=0
      - MQTT_RETRIES=3
      - MQTT_RETRY_DELAY=500
    depends_on:
      - mosquitto
      - mongo
    networks:  # Add to network
      - orion-network
    command: -dbURI mongodb://mongo:27017
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:1026/version" ]  # Ejemplo para FIWARE Orion
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
  mongo:
    image: mongo:8.0
    networks: # Add to network
      - orion-network

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    restart: unless-stopped
    environment:
      - ALLOW_ANONYMOUS=true  # Correct way to enable anonymous connections
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -p 1883 -t test -m test || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - orion-network

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      CLUSTER_ID: kafka-docker-cluster-1
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://host.docker.internal:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - orion-network

  mqtt_kafka_connect:
    build:
      context: .
      dockerfile: connector.Dockerfile
    container_name: connect
    depends_on:
      kafka:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    ports:
      - 8083:8083
      - 8888:8888
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: -1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: -1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: -1
      CONNECT_PRODUCER_MAX_REQUEST_SIZE: 157286400
      CONNECT_CONSUMER_FETCH_MAX_BYTES: 157286400
      CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES: 157286400

      # Replace these lines:
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      # And add:
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    volumes:
      - ./target:/usr/share/java/mqtt-kafka-connect
    healthcheck:
      interval: 5s
      retries: 10
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8083
    networks:  # Add to network
      - orion-network
